#
# Test of the Nix ROM server
#


set build_components {
	core init drivers/timer
	server/fs_rom
	server/nix
	server/nix_store
	server/vfs
	test/libports/ncurses
	test/libports/nixexpr
	test/printf
}

build $build_components

create_boot_directory

append config {
<config>
	<parent-provides>
		<service name="CAP"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="PD"/>
		<service name="RAM"/>
		<service name="RM"/>
		<service name="ROM"/>
		<service name="SIGNAL"/>
	</parent-provides>

	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="store_fs">
		<binary name="vfs"/>
		<resource name="RAM" quantum="8M"/>
		<provides><service name="File_system"/></provides>
		<config>
			<vfs> <ram/> </vfs>
			<policy label_prefix="nix_store" writeable="yes"/>
			<default-policy/>
		</config>
		<route>
			<any-service> <parent/> </any-service>
		</route>
	</start>

	<start name="store_rom">
		<binary name="fs_rom"/>
		<resource name="RAM" quantum="8M"/>
		<provides><service name="ROM"/></provides>
		<route>
			<any-service>
				<child name="store_fs"/>
				<parent/>
			</any-service>
		</route>
		<config verbose="true"/>
	</start>

	<start name="nix_store">
		<resource name="RAM" quantum="2M"/>
		<provides>
			<service name="Nix_store"/>
			<service name="File_system"/>
		</provides>
		<route>
			<any-service>
				<child name="store_fs"/>
				<child name="store_rom"/>
				<parent/>
			</any-service>
		</route>
	</start>

	<start name="nix">
		<resource name="RAM" quantum="8M"/>
		<provides>
			<service name="ROM"/>
		</provides>
		<route>
			<service name="ROM" label_prefix="store">
				<child name="store_rom"/>
			</service>
			<service name="File_system" label="ingest">
				<child name="nix_store"/>
			</service>
			<any-service>
				<parent/> <any-child/>
			</any-service>
		</route>
		<config verbosity="9">
			<vfs>
				<dir name="nix"> <dir name="corepkgs"> <tar name="nix_corepkgs.tar"/> </dir> </dir>
				<inline name="default.nix">builtins.getRom</inline>
			</vfs>
			<nix verbosity="9">
				<search-path name="nix" path="/corepkgs"/>
				<search-path name="store" path="/store"/>
			</nix>
		<default-policy/>
		</config>
	</start>

	<start name="init">
		<resource name="RAM" quantum="2M"/>
		<route>
			<any-service>
				<child name="nix"/>
				<parent/>
			</any-service>
		</route>
		<config>
			<parent-provides>
				<service name="LOG"/>
				<service name="RM"/>
			</parent-provides>
			<start name="test-printf">
				<resource name="RAM" quantum="1M"/>
				<route>
					<any-service> <parent/> </any-service>
				</route>
			</start>
		</config>
	</start>

</config>
}

install_config $config

set boot_modules {
	core init ld.lib.so
	curl.lib.so
	fs_rom
	libc.lib.so
	libcrypto.lib.so
	libm.lib.so
	libssh.lib.so
	libssl.lib.so
	nix
	nix_corepkgs.tar
	nixexpr.lib.so
	nixformat.lib.so
	nixmain.lib.so
	nix_store
	nixstore.lib.so
	nixutil.lib.so
	stdcxx.lib.so
	test-printf
	timer
	vfs
	zlib.lib.so
}

build_boot_image $boot_modules

append qemu_args " -nographic"

run_genode_until {child "test-printf" exited with exit value 0} 20
