# Build program images
build {
	core init
	proxy/rom_verify
	test/log
}

create_boot_directory

install_config {
<config>
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
	</parent-provides>
	<default-route>
		<any-service><parent/><any-child/></any-service>
	</default-route>
	<start name="rom_verify">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="ROM"/> </provides>
		<config>
			<policy label_suffix="-> test-log" sha256="be47e04dbcbfc8885f1e79c781523a4b5c018eb8a4542b13f676fcbd620f08f4"/>
		</config>
	</start>
	<start name="init" verbose="yes">
		<resource name="RAM" quantum="2M"/>
		<route>
				<service name="ROM">
					<child name="rom_verify"/> </service>
				<any-service>
					<parent/>
				</any-service>
		</route>
		<config>
			<parent-provides>
				<service name="CPU"/>
				<service name="LOG"/>
				<service name="PD"/>
				<service name="RAM"/>
				<service name="RM"/>
				<service name="ROM"/>
			</parent-provides>
			<start name="test-log">
				<resource name="RAM" quantum="1M"/>
			</start>
		</config>
	</start>
</config>
}

build_boot_image {
	core init ld.lib.so
	libc.lib.so
	libm.lib.so
	rom_verify
	stdcxx.lib.so
	test-log
}

append qemu_args " -nographic"

run_genode_until {Test done.} 20
